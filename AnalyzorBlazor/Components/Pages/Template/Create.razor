@page "/template/create"
@inject ITemplateService templateService
@inject IJSRuntime js
@inject NavigationManager navManager
@rendermode InteractiveServer
<h3>Create Template</h3>
<EditForm Model="Template" OnValidSubmit="HandleTemplateCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-8">

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Name">Name</label>
                </div>
                <div class="col-8">
                    <InputText @bind-Value="Template.Name" class="form-control" />
                    <ValidationMessage For="@(() => Template.Name)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Comment">Comment</label>
                </div>
                <div class="col-8">
                    <InputTextArea @bind-Value="Template.Comment" class="form-control"></InputTextArea>
                    <ValidationMessage For="@(() => Template.Comment)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label>% Lost</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.PersntLost" class="form-control" />
                    <ValidationMessage For="@(() => Template.PersntLost)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="PersntResult">% Result</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.PersntResult" class="form-control" />
                    <ValidationMessage For="@(() => Template.PersntResult)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Shipping_price">Shipping price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Shipping_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Shipping_price)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Tester_time">Tester time</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Tester_time" class="form-control" />
                    <ValidationMessage For="@(() => Template.Tester_time)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Tester_time_price">Tester time price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Tester_time_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Tester_time_price)" />
                </div>
            </div>

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Receiver _time">Receiver  time</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Receiver_time" class="form-control" />
                    <ValidationMessage For="@(() => Template.Receiver_time)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Receiver_time_price">Receiver time price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Receiver_time_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Receiver_time_price)" />
                </div>
            </div>

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Lister_time">Lister time</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Lister_time" class="form-control" />
                    <ValidationMessage For="@(() => Template.Lister_time)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Lister_time_price">Lister time price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Lister_time_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Lister_time_price)" />
                </div>
            </div>

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Fullfilment_time">Fullfilment time</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Fullfilment_time" class="form-control" />
                    <ValidationMessage For="@(() => Template.Fullfilment_time)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Fullfilment_time_price">Fullfilment time price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Fullfilment_time_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Fullfilment_time_price)" />
                </div>
            </div>

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Market_fees">Market_fees</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Market_fees" class="form-control" />
                    <ValidationMessage For="@(() => Template.Market_fees)" />
                </div>
            </div>

            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Dissassembly_time">Dissassembly time</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Dissassembly_time" class="form-control" />
                    <ValidationMessage For="@(() => Template.Dissassembly_time)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-4">
                    <label for="Disasembler_time_price">Disasembler time price</label>
                </div>
                <div class="col-8">
                    <InputNumber @bind-Value="Template.Disasembler_time_price" class="form-control" />
                    <ValidationMessage For="@(() => Template.Disasembler_time_price)" />
                </div>
            </div>
        </div>
    </div>

    <br />

    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Create Template
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>

</EditForm>
@code {
    private Template Template = new() {
        PersntLost = 12.5F, PersntResult = 10,
        Tester_time = 150, Tester_time_price = 50,
        Receiver_time = 30, Receiver_time_price = 50,
        Lister_time = 45, Lister_time_price = 50,
        Fullfilment_time = 25, Fullfilment_time_price = 50,
        Dissassembly_time = 90, Disasembler_time_price = 50,
        Market_fees = 15, Shipping_price=50
    };

    private async Task HandleTemplateCreate()
    {
        BackToList();
        var response = await templateService.Create(Template);
        if (response.Success)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/template/");
    }
}
