@page "/tester/update/{id:int}"
@inject IDeviceService deviceService
@inject IJSRuntime js
@inject NavigationManager navManager
@rendermode InteractiveServer

<h3>Edit Device</h3>
<EditForm Model="Device" OnValidSubmit="HandleDeviceUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row p-1">
        <div class="col-4">
            <label>Name</label>
        </div>
        <div class="col-8">
            <InputText @bind-Value="Device.Name" class="form-control" />
            <ValidationMessage For="@(() => Device.Name)" />
        </div>

    </div>
    <div class="form-group row p-1">
        <div class="col-4">
            <label>Qty Laptops</label>
        </div>
        <div class="col-8">
            <InputNumber @bind-Value="Device.TotalCount" class="form-control" />
            <ValidationMessage For="@(() => Device.TotalCount)" />
        </div>
    </div>
    <div class="form-group row p-1">
        <div class="col-4">
            <label>Tester Time</label>
        </div>
        <div class="col-8">
            <InputNumber @bind-Value="Device.TesterTime" class="form-control" />
            <ValidationMessage For="@(() => Device.TesterTime)" />
        </div>
    </div>
    <div class="form-group row p-1">
        <div class="col-4">
            <label>SN</label>
        </div>
        <div class="col-8">
            <InputText @bind-Value="Device.SN" class="form-control" />
            <ValidationMessage For="@(() => Device.SN)" />
        </div>
    </div>
    <div class="form-group row p-1">
        <div class="col-4">
            <label>Model</label>
        </div>
        <div class="col-8">
            <InputText @bind-Value="Device.Model" class="form-control" />
            <ValidationMessage For="@(() => Device.Model)" />
        </div>
    </div>
    <div class="form-group row p-1">
        <div class="col-4">
            <label>Comments</label>
        </div>
        <div class="col-8">
            <InputTextArea @bind-Value="Device.Comments" class="form-control"></InputTextArea>
            <ValidationMessage For="@(() => Device.Comments)" />
        </div>
    </div>
    <br />

    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Update Device
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>

</EditForm>
    @code {
        [Parameter]
        public int id { get; set; }
        private Device Device = new ();
        protected async override Task OnInitializedAsync()
        {
            var deviceResponse = await deviceService.GetForUpdate(id);
            if (deviceResponse.Success)
            {
                Device = deviceResponse.Data;
            }
        }
        private async Task HandleDeviceUpdate()
        {
            BackToList();
            var response = await deviceService.Edit(id, Device);
            if (response.Success)
            {
                BackToList();
            }
        }

        private void BackToList()
        {
            navManager.NavigateTo("/tester/");
        }
    }
